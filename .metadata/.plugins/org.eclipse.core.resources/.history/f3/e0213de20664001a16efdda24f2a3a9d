#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/neutrino.h>
#include <sys/netmgr.h>

#include "des-mva.h"

void displayMenu();

int main(int argc, char* argv[]) {
	int coid;
	char userInput[6];
	pid_t serverpid;
	Person person;

	if (argc != 2) {
		fprintf(stderr, "Wrong number of arguments\n");
		exit(EXIT_FAILURE);
	}

	serverpid = atoi(argv[1]);

	if ((coid = ConnectAttach(ND_LOCAL_NODE, serverpid, 1, _NTO_SIDE_CHANNEL, 0))
			== -1) {
		fprintf(stderr, "Inputs ConnectAttach error\n");
		perror(NULL);
		exit(EXIT_FAILURE);
	}

	while (1) {
		displayMenu();
		scanf("%s", userInput);
		printf("User Input: %s == %s", userInput, inMessage[LS_INPUT]);
		if ((strcmp(userInput, inMessage[LS_INPUT]) == 0)
				|| (strcmp(userInput, inMessage[RS_INPUT]) == 0)) {
			printf("Enter your ID: ");
			scanf("%d", person.personID);
			person.direction = INBOUND;
			person.state = SCAN_STATE;
		}
		else if(strcmp(userInput, inMessage[WS_INPUT]) == 0) {
			printf("Enter your weight: ");
			scanf("%d", person.weight);
			person.direction = OUTBOUND;
			person.state = SCAN_STATE;
		}
		else if(strcmp(userInput, inMessage[GLU_INPUT]) == 0 || strcmp(userInput, inMessage[GRU_INPUT]) == 0) {
			person.state = UNLOCK_STATE;
		}
		else if(strcmp(userInput, inMessage[LC_INPUT]) == 0 || strcmp(userInput, inMessage[RC_INPUT]) == 0) {
			person.state = CLOSE_STATE;
		}
		else if(strcmp(userInput, inMessage[GLL_INPUT]) == 0 || strcmp(userInput, inMessage[GRL_INPUT]) == 0) {
			person.state = LOCK_STATE;
		}
		else if(strcmp(userInput, inMessage[RO_INPUT]) == 0 || strcmp(userInput, inMessage[LO_INPUT]) == 0) {
			person.state = OPEN_STATE;
		}
		else if(strcmp(userInput, inMessage[EXIT_INPUT]) == 0) {
			person.state = EXIT_STATE;
		}
		if(MsgSend(coid, &person, sizeof(person) + 1, NULL, 0) == -1L) {
			fprintf (stderr, "Inputs MsgSend had an error\n");
			exit (EXIT_FAILURE);
		}
	}

	if (ConnectDetach(coid) == -1) {
		perror("Inputs ConnectDetach error.");
		exit(EXIT_FAILURE);
	}

	return EXIT_SUCCESS;
}

void displayMenu() {
	printf("\nEnter the event type:\n");
	printf("\t%s\n", "ls  - left scan");
	printf("\t%s\n", "rs  - right scan");
	printf("\t%s\n", "ws  - weight scale");
	printf("\t%s\n", "lo  - left open");
	printf("\t%s\n", "ro  - right open");
	printf("\t%s\n", "lc  - left close");
	printf("\t%s\n", "rc  - right close");
	printf("\t%s\n", "gru - guard right unlock");
	printf("\t%s\n", "glu - guard left unlock");
	printf("\t%s\n", "grl - guard right lock");
	printf("\t%s\n", "gll - guard left lock");
	printf("\t%s\n", "exit  - quit the program");
}
